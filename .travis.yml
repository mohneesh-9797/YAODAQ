language: cpp
dist: bionic

arch:
  - amd64

compiler:
 - gcc
 - clang
 
env:
  global:
  matrix:
    - ROOT_VERSION=6.18.04
 
os: 
 - linux

matrix:
  fast_finish: true
  allow_failures:
  - os: 
    - osx
  include:
    - os: osx
      compiler: clang
      osx_image: xcode10.14 

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - libmysqlclient-dev
      - doxygen
      - cmake
      - lcov
      - cmake
  
before_install:
  - ./.travis-ci.d/install_dependencies.sh
  - if [ "$TRAVIS_OS_NAME" == "osx"  ];
    then brew update ;
    brew upgrade cmake;
    brew install lcov doxygen openssl;
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ];
    then sudo apt-get update;
    sudo apt-get install cmake lcov doxygen; 
    fi
  
script:
    - source dependencies/root/bin/thisroot.sh
    - mkdir build
    - cd build
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; 
    then cmake .. ;
    cmake --build . ;
    fi
    - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_COMPILER" == "clang" ]; 
    then cmake .. ;
    cmake --build . ;
    fi
    - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_COMPILER" == "gcc" ]; 
    then cmake -DCMAKE_BUILD_TYPE=coverage .. ;
    cmake --build . --target coverage
    fi
    - if [ "$TRAVIS_OS_NAME" == "windows" ]; 
    then cmake .. ; 
    cmake --build . ;
    fi
    - cmake --install .
    # - make test
    # - make docs 
  
after_success:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_COMPILER" == "gcc" ]; 
    
    # Create lcov report
    # capture coverage info
    then  lcov --directory . --capture --output-file coverage.info ;
    # filter out system and extra files.
    # To also not include test code in coverage add them with full path to the patterns: '*/tests/*'
    lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info ;
    # output coverage data for debugging (optional)
    lcov --list coverage.info ;
    # Uploading to CodeCov
    # '-f' specifies file(s) to use and disables manual coverage gathering and file search which has already been done above
    bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
fi

# Don't send e-mail notifications
notifications:
  email:
    on_success: never
    on_failure: never

